<?xml version="1.0" encoding="UTF-8"?>
<project name="argus-biz" default="argus-biz-package">

    <!-- ant 系统环境变量-->
    <property environment="env"/>
    <property file="${basedir}/../ant.properties"/>
    <property file="local.properties"/>
    <property name="appName" value="${ant.project.name}"/>

    <loadproperties srcFile="project.properties"/>

    <import file="${sdk.dir}/tools/ant/build.xml"/>

    <!-- 初始化工作 -->
    <target name="init">
        <echo>Initializing all output directories...</echo>
        <delete dir="${outdir.bin}"/>
        <mkdir dir="${outdir.bin}"/>
        <mkdir dir="${outdir.classes}"/>
    </target>

    <!-- 根据工程中的资源文件生成R.java文件  -->
    <target name="gen-R" depends="init">
        <echo>Generating R.java from the resources...</echo>
        <exec executable="${aapt}" failonerror="true">
            <arg value="package"/>
            <arg value="-f"/>
            <arg value="-m"/>
            <arg value="-J"/>
            <arg value="${outdir.gen}"/>
            <arg value="-S"/>
            <arg value="${resource.dir}"/>
            <arg value="-M"/>
            <arg value="${manifest.xml}"/>
            <arg value="-I"/>
            <arg value="${android.jar}"/>
        </exec>
    </target>

    <!-- 编译aidl文件 -->
    <target name="aidl" depends="gen-R">
        <echo>Compiling .aidl into java files...</echo>
        <apply executable="${aidl}" failonerror="true">
            <!-- 指定预处理文件 -->
            <arg value="-p${framework.aidl}"/>
            <!-- aidl声明的目录 -->
            <arg value="-I${src.dir}"/>
            <!-- 目标文件目录 -->
            <arg value="-o${outdir.gen}"/>
            <!-- 指定哪些文件需要编译 -->
            <fileset dir="${src.dir}">
                <include name="**/*.aidl"/>
            </fileset>
        </apply>
    </target>

    <!-- 将工程中的java源文件编译成class文件 -->
    <target name="compile" depends="aidl">
        <echo>Compiling java source code...</echo>
        <javac encoding="utf-8" target="1.5" srcdir="."
               destdir="${outdir.classes}" bootclasspath="${android.jar}">
            <classpath>
                <fileset dir="${external.lib}" includes="*.jar"/>
                <!--<fileset dir="${library-dir}/libs" includes="*.jar" />-->
            </classpath>
        </javac>
    </target>

    <!-- 将.class文件转化成.dex文件 -->
    <target name="dex" depends="compile">
        <echo>Converting compiled files and external libraries into a .dex file...</echo>
        <exec executable="${dx}" failonerror="true">
            <arg value="--dex"/>
            <!-- 输出文件 -->
            <arg value="--output=${dex.ospath}"/>
            <!-- 要生成.dex文件的源classes和libraries -->
            <arg value="${outdir.classes.ospath}"/>
            <arg value="${external.lib.ospath}"/>
        </exec>
    </target>

    <!-- 将资源文件放进输出目录 -->
    <target name="package-res-and-assets">
        <echo>Packaging resources and assets...</echo>
        <exec executable="${aapt}" failonerror="true">
            <arg value="package"/>
            <arg value="-f"/>
            <arg value="-M"/>
            <arg value="${manifest.xml}"/>
            <arg value="-S"/>
            <arg value="${resource.dir}"/>
            <arg value="-A"/>
            <arg value="${asset.dir}"/>
            <arg value="-I"/>
            <arg value="${android.jar}"/>
            <arg value="-F"/>
            <arg value="${resources.package}"/>
        </exec>
    </target>

    <!-- 打包成未签证的apk -->
    <target name="argus-biz-package" depends="dex, package-res-and-assets">
        <echo>Packaging unsigned apk for release...</echo>
        <exec executable="${apkbuilder}" failonerror="true">
            <arg value="${out.unsigned.package.ospath}"/>
            <arg value="-u"/>
            <arg value="-z"/>
            <arg value="${resources.package.ospath}"/>
            <arg value="-f"/>
            <arg value="${dex.ospath}"/>
            <arg value="-rf"/>
            <arg value="${srcdir.ospath}"/>
        </exec>
        <echo>It will need to be signed with jarsigner before being published.</echo>
    </target>

    <!-- 对apk进行签证 -->
    <target name="jarsigner" depends="argus-biz-package">
        <echo>Packaging signed apk for release...</echo>
        <exec executable="${jarsigner}" failonerror="true">
            <arg value="-keystore"/>
            <arg value="${keystore.file}"/>
            <arg value="-storepass"/>
            <arg value="123456"/>
            <arg value="-keypass"/>
            <arg value="123456"/>
            <arg value="-signedjar"/>
            <arg value="${out.signed.package.ospath}"/>
            <arg value="${out.unsigned.package.ospath}"/>
            <!-- 不要忘了证书的别名 -->
            <arg value="release"/>
        </exec>
    </target>

    <!-- 发布 -->
    <target name="release" depends="jarsigner">
        <!-- 删除未签证apk -->
        <delete file="${out.unsigned.package.ospath}"/>
        <echo>APK is released. path:${out.signed.package.ospath}</echo>
    </target>

</project>
